# redis-config
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: my-chat-app
data:
  redis.conf: |
    port 6379
    bind 0.0.0.0
    dir /data
    protected-mode no
    appendonly yes
    save 900 1
    save 300 10
    save 60 10000
    replica-serve-stale-data yes
    replica-read-only yes
    requirepass your-redis-password
    masterauth your-redis-password
    maxmemory 256mb
    maxmemory-policy allkeys-lru

---
# redis-statefulset
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: my-chat-app
spec:
  serviceName: redis-headless
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:6.2
          command:
          - sh
          - -c
          - |
            cp /etc/redis/redis.conf /data/redis.conf
            if [ "$(hostname)" != "redis-0" ]; then
              echo "replicaof redis-0.redis-headless.my-chat-app.svc.cluster.local 6379" >> /data/redis.conf
            fi
            redis-server /data/redis.conf
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis
            - name: redis-data
              mountPath: /data
          env:
            - name: REDIS_PASSWORD
              value: "your-redis-password"
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - redis-cli -a $REDIS_PASSWORD ping
            initialDelaySeconds: 15
            periodSeconds: 5
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - redis-cli -a $REDIS_PASSWORD ping
            initialDelaySeconds: 20
            periodSeconds: 10
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
  volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

---

# redis-service
apiVersion: v1
kind: Service
metadata:
  name: redis-headless
  namespace: my-chat-app
spec:
  clusterIP: None
  selector:
    app: redis
  ports:
    - name: redis
      port: 6379
      targetPort: 6379